import{a as $}from"./chunk-QMVJ6BBU.js";import{b as l,c as N,d as R,e as _,f as w,g as G}from"./chunk-WBJMEOTJ.js";import{$a as T,Ba as y,G as C,Ka as j,Qa as r,Ra as n,S as M,Ta as x,Xa as o,Za as S,a as h,b as g,i as c,j as d,p as f,ta as a,tb as m,w as s,x as E,z as b}from"./chunk-Q7UF7ZBT.js";var u=class p{#e=M(m);numErrors=l(this.#e.getErrorCount$,{initialValue:0});something=new c(1);debounce$=this.something.pipe(b(300));myGuess=5;#t=this.debounce$.pipe(s(e=>Math.floor(e)===e),s(e=>e>=1&&e<=100),C((e,t)=>t<e.left||t>e.right?e:t<this.myGuess?{left:t,right:e.right,guess:t}:t>this.myGuess?{left:e.left,right:t,guess:t}:g(h({},e),{guess:t}),{left:1,right:100,guess:-1}),f(({left:e,right:t,guess:i})=>{if(i===this.myGuess)throw new Error("Error is thrown and the global error handler handles it");return`Guess an integer between ${e} and ${t}`}),E(e=>(console.error(e),this.#e.addNumErrors(),alert(`Number of error caught: ${this.numErrors()}`),d)));hint=l(this.#t,{initialValue:"Guess an integer between 1 and 100"});static \u0275fac=function(t){return new(t||p)};static \u0275cmp=y({type:p,selectors:[["app-reject-errors-example"]],features:[T([{provide:m,useClass:$}])],decls:11,vars:2,consts:[["type","number",3,"ngModelChange","ngModel"]],template:function(t,i){t&1&&(r(0,"h3"),o(1,"With rejectErrors option removed, toSignal catches the uncaught exception and handles it explicitly."),n(),r(2,"p"),o(3,"The observable's catchError operator returns EMPTY to complete the observable."),n(),r(4,"p"),o(5,"Subsequent input to the textbox has no effect."),n(),r(6,"div")(7,"p"),o(8),n()(),o(9," Your guess: "),r(10,"input",0),x("ngModelChange",function(D){return i.something.next(D)}),n()),t&2&&(a(8),S("Hint: ",i.hint()),a(2),j("ngModel",i.something.getValue()))},dependencies:[G,N,w,R,_],styles:["button[_ngcontent-%COMP%]{margin-right:1rem;padding:.5rem}"],changeDetection:0})};export{u as default};
